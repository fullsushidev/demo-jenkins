node{

    try{
        parameters {
            string(name: 'project', defaultValue: 'nil', description: 'Project name that triggers web publisher')
            }
        stage('Clone sources') {
            cleanWs()
            git url: 'https://github.com/senaingrid/test-web'
            if ("${params.project}" == 'curl') {
                copyArtifacts fingerprintArtifacts: true,  flatten: true, projectName: 'QMSTR/qmstr-cURL-demo', selector: upstream(fallbackToLastSuccessful: true)
            } else if ("${params.project}" == 'docs') {
                copyArtifacts fingerprintArtifacts: true,  flatten: true, projectName: 'QMSTR/qmstr-docs-build', selector: upstream(fallbackToLastSuccessful: true)
            }
        }
        stage('publish website'){
            withEnv(["PATH+SNAP=/snap/bin"]){
                sh 'git config credential.helper store'
                sh 'curl -u senaingrid:b2122ec90e78610b4b6317aad1912a73e601aebd https://api.github.com/senaingrid'
                echo "Publishing ${params.project} project"
                sh 'git submodule init && git submodule update'
                sh '(cd ./static && tar xvjf ../qmstr-reports.tar.bz2 && mv ./reports ./packages)'
                // sh '(cd ./static && tar xvjf ../qmstr-docs.tar.bz2 && mv ./docs ./documentation)'
                sh './scripts/generate-data-branch.sh ./web_data_dir'
                sh 'git config http.sslVersion tlsv1.2'
                sh 'git push --force https://senaingrd:b2122ec90e78610b4b6317aad1912a73e601aebd@github.com/senaingrid/test-web gh-pages'
                }
            }
        }
    catch (Exception e)
    {
        currentBuild.result = 'FAILURE'
    }
}
